version: 2.1

job_defaults: &job_defaults
  working_directory: /go/src/github.com/jimmidyson/configmap-reload

  docker:
  - image: golang:1.15

  environment: &env_defaults
  - CGO_ENABLED: "0"
  - GO111MODULE: "on"

docker_job_defaults: &docker_job_defaults
  <<: *job_defaults

  docker:
  - image: docker:19.03.13-git

jobs:
  checkout_code:
    <<: *job_defaults

    steps:
      - checkout

      - save_cache:
          key: code-repo-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_TAG }}
          paths:
          - /go/src/github.com/jimmidyson/configmap-reload

  build:
    <<: *job_defaults

    steps:
      - restore_cache:
          keys:
          - code-repo-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_TAG }}
      
      - restore_cache:
          keys:
          - gomod-cache-{{ checksum "go.sum" }}

      - run:
          name: Build binary

          command: |
            make cross out/configmap-reload

      - persist_to_workspace:
          root: .
          paths:
          - out/configmap-reload*

      - store_artifacts:
          path: ./out
          destination: out/

      - save_cache:
          key: gomod-cache-{{ checksum "go.sum" }}
          paths:
          - /go/pkg/mod

  build_docker:
    <<: *docker_job_defaults

    steps:
      - restore_cache:
          keys:
          - code-repo-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_TAG }}

      - setup_remote_docker:
          version: 19.03.13

      - attach_workspace:
          at: .

      - run:
          name: Build Docker image
          command: |
            apk add -U make bash
            for arch in amd64 arm arm64 ppc64le s390x; do
              make docker GOOS=linux GOARCH=${arch} DOCKER_IMAGE_TAG=${CIRCLE_SHA1}
            done

      - run:
          name: Export Docker image
          command: |
            for arch in amd64 arm arm64 ppc64le s390x; do
              docker save -o ./configmap-reload-docker-${arch}.tar jimmidyson/configmap-reload:${CIRCLE_SHA1}-${arch}
            done

      - persist_to_workspace:
          root: .
          paths:
          - configmap-reload-docker-*.tar

  push_docker:
    <<: *docker_job_defaults

    steps:
      - restore_cache:
          keys:
          - code-repo-{{ .Environment.CIRCLE_SHA1 }}-{{ .Environment.CIRCLE_TAG }}

      - setup_remote_docker:
          version: 19.03.13

      - attach_workspace:
          at: .

      - run:
          name: Push individual arch Docker images
          command: |
            if [ "${CIRCLE_PROJECT_USERNAME}" != "jimmidyson" ]; then
              echo "Skipping - this is not in origin repository"
              exit 0
            fi
            if [ -z "${DOCKER_LOGIN}" ] || [ -z "${DOCKER_PASSWORD}" ]; then
              echo "Missing Docker login information!!!"
              exit 1
            fi
            DOCKER_TAG=${CIRCLE_TAG:-latest}
            docker login -u ${DOCKER_LOGIN} -p ${DOCKER_PASSWORD}
            for arch in amd64 arm arm64 ppc64le s390x; do
              docker load -q -i ./configmap-reload-docker-${arch}.tar
              docker tag jimmidyson/configmap-reload:${CIRCLE_SHA1}-${arch} jimmidyson/configmap-reload:${DOCKER_TAG}-${arch}
              docker push jimmidyson/configmap-reload:${DOCKER_TAG}-${arch}
            done

      - run:
          name: Push multiarch Docker image
          command: |
            apk add -U make bash curl
            apk upgrade
            make manifest-push DOCKER_IMAGE_TAG=${CIRCLE_TAG:-latest}

workflows:
  version: 2
  build_and_deploy:
    jobs:
    - checkout_code:
        filters:
          tags:
            only:
              /v[0-9]+(\.[0-9]+)*/
    - build:
        requires:
        - checkout_code
        filters:
          tags:
            only:
              /v[0-9]+(\.[0-9]+)*/
    - build_docker:
        requires:
        - build
        filters:
          tags:
            only:
              /v[0-9]+(\.[0-9]+)*/
    - push_docker:
        requires:
        - build_docker
        filters:
          branches:
            only: master
          tags:
            only:
              /v[0-9]+(\.[0-9]+)*/
